version: '3.9'

services:
  api: &main_app
    build:
      context: .
      dockerfile: ./deploy/Dockerfile
      target: prod
    image: MapsPlanner_API:${MAPSPLANNER_API_VERSION:-latest}
    restart: always
    env_file:
      - .env
    depends_on:
      db:
        condition: service_healthy
    environment:
      MAPSPLANNER_API_HOST: 0.0.0.0
      MAPSPLANNER_API_DB_HOST: MapsPlanner_API-db
      MAPSPLANNER_API_DB_PORT: 5432
      MAPSPLANNER_API_DB_USER: MapsPlanner_API
      MAPSPLANNER_API_DB_PASS: MapsPlanner_API
      MAPSPLANNER_API_DB_BASE: MapsPlanner_API

  db:
    image: postgres:13.8-bullseye
    hostname: MapsPlanner_API-db
    environment:
      POSTGRES_PASSWORD: "MapsPlanner_API"
      POSTGRES_USER: "MapsPlanner_API"
      POSTGRES_DB: "MapsPlanner_API"
    volumes:
      - MapsPlanner_API-db-data:/var/lib/postgresql/data
    restart: always
    healthcheck:
      test: pg_isready -U MapsPlanner_API
      interval: 2s
      timeout: 3s
      retries: 40

  migrator:
    image: MapsPlanner_API:${MAPSPLANNER_API_VERSION:-latest}
    restart: "no"
    command: alembic upgrade head
    environment:
      MAPSPLANNER_API_DB_HOST: MapsPlanner_API-db
      MAPSPLANNER_API_DB_PORT: 5432
      MAPSPLANNER_API_DB_USER: MapsPlanner_API
      MAPSPLANNER_API_DB_PASS: MapsPlanner_API
      MAPSPLANNER_API_DB_BASE: MapsPlanner_API
    depends_on:
      db:
        condition: service_healthy



volumes:
  MapsPlanner_API-db-data:
    name: MapsPlanner_API-db-data
