version: '3.9'

services:
  api: &main_app
    build:
      context: .
      dockerfile: ./deploy/Dockerfile
      target: prod
    image: maps_planner_api:${MAPSPLANNER_API_VERSION:-latest}
    restart: always
    ports:
      - "8888:8888"
    env_file:
      - .env
    depends_on:
      db:
        condition: service_healthy
    environment:
      api_host: 0.0.0.0
      api_port: 8888
      db_host: maps_planner_api-db
      db_port: 5432
      db_user: maps_planner_api
      db_pass: maps_planner_api
      db_base: maps_planner_api
  db:
    image: postgres:13.8-bullseye
    hostname: maps_planner_api-db
    environment:
      POSTGRES_PASSWORD: "maps_planner_api"
      POSTGRES_USER: "maps_planner_api"
      POSTGRES_DB: "maps_planner_api"
    ports:
      - "15432:5432"
    volumes:
      - maps_planner_api-db-data:/var/lib/postgresql/data
    restart: always
    healthcheck:
      test: pg_isready -U maps_planner_api
      interval: 2s
      timeout: 3s
      retries: 40

  migrator:
    image: maps_planner_api:${MAPSPLANNER_API_VERSION:-latest}
    restart: "no"
    command: alembic upgrade head
    environment:
      MAPSPLANNER_API_DB_HOST: maps_planner_api-db
      MAPSPLANNER_API_DB_PORT: 5432
      MAPSPLANNER_API_DB_USER: maps_planner_api
      MAPSPLANNER_API_DB_PASS: maps_planner_api
      MAPSPLANNER_API_DB_BASE: maps_planner_api
    depends_on:
      db:
        condition: service_healthy
volumes:
  maps_planner_api-db-data:
    name: maps_planner_api-db-data
